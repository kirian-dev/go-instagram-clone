{
    "swagger": "2.0",
    "info": {
        "description": "This REST API for instagram clone.",
        "title": "GO-INSTAGRAM-CLONE",
        "contact": {
            "name": "Kirill Polozenko",
            "url": "https://github.com/kirian-dev",
            "email": "polozenko.kirill.job@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/account": {
            "get": {
                "description": "Get the account details of the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/all": {
            "get": {
                "description": "Get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate a user with their email or phone and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "responses": {
                    "201": {
                        "description": "Response with access token and refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout the user by clearing their refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "description": "Refresh the access token using the refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh access token and refresh token",
                "responses": {
                    "201": {
                        "description": "Response with access token and refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Refresh token is invalid",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user with the provided credentials, return access token and refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "responses": {
                    "201": {
                        "description": "Response with access token and refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid body parameters",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/{id}": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "The user can update himself",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid body parameters",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/{userId}": {
            "delete": {
                "description": "The user can delete himself",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/list": {
            "get": {
                "description": "List chats for a current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get all chats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChatWithParticipants"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chatID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChatWithParticipants"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete chat if user is admin or member in this chat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Delete chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chatID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatID}/participants/{participantID}": {
            "delete": {
                "description": "Delete participant from group chat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Delete participant from chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chatID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages/list": {
            "get": {
                "description": "List messages for a current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Get all messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages/{messageID}": {
            "put": {
                "description": "Update message only for who created the message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Update message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "messageID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update read at message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Update read message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "messageID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages/{messageID}/users/{userID}": {
            "delete": {
                "description": "Delete message if user is created this message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Delete message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chatID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chatID}/participants": {
            "post": {
                "description": "Add participants to group chat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Add Participants to group chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chatID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChatParticipant"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "e.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Chat": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "type": {
                    "$ref": "#/definitions/models.ChatType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ChatParticipant": {
            "type": "object",
            "required": [
                "chat_id",
                "role",
                "user_id"
            ],
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "joined_at": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.ParticipantRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ChatType": {
            "type": "string",
            "enum": [
                "private",
                "group"
            ],
            "x-enum-varnames": [
                "PrivateChat",
                "GroupChat"
            ]
        },
        "models.ChatWithParticipants": {
            "type": "object",
            "properties": {
                "chat": {
                    "$ref": "#/definitions/models.Chat"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChatParticipant"
                    }
                }
            }
        },
        "models.Message": {
            "type": "object",
            "required": [
                "chat_id",
                "receiver_id",
                "sender_id",
                "text"
            ],
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                },
                "receiver_id": {
                    "type": "string",
                    "maxLength": 50
                },
                "sender_id": {
                    "type": "string",
                    "maxLength": 50
                },
                "text": {
                    "type": "string",
                    "maxLength": 512
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ParticipantRole": {
            "type": "string",
            "enum": [
                "admin",
                "member"
            ],
            "x-enum-varnames": [
                "Admin",
                "Member"
            ]
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "maximum": 200,
                    "minimum": 0
                },
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string",
                    "maxLength": 100
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 60
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female",
                        "other"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}